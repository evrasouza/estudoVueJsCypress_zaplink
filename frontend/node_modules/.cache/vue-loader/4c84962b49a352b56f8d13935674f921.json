{"remainingRequest":"C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\qaninja\\devtester\\zaplink\\frontend\\src\\views\\Dashboard.vue?vue&type=template&id=22ba47ca&","dependencies":[{"path":"C:\\qaninja\\devtester\\zaplink\\frontend\\src\\views\\Dashboard.vue","mtime":1607539502000},{"path":"C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606125000373},{"path":"C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1606125021958},{"path":"C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606125000373},{"path":"C:\\qaninja\\devtester\\zaplink\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1606125021958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}